// <auto-generated />
using System;
using ClienteVendas.Infra.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ClienteVendas.Infra.Data.Migrations
{
    [DbContext(typeof(MainContext))]
    partial class MainContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.1-rtm-30846")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ClienteVendas.Domain.Entities.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Ativo");

                    b.Property<string>("Celular")
                        .HasColumnType("varchar(11)")
                        .HasMaxLength(11);

                    b.Property<string>("Cpf")
                        .IsRequired()
                        .HasColumnType("varchar(11)")
                        .HasMaxLength(11);

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("datetime");

                    b.Property<string>("Email")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100);

                    b.Property<int>("EnderecoId");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.HasIndex("EnderecoId")
                        .IsUnique();

                    b.ToTable("Cliente");

                    b.HasData(
                        new { Id = 1, Ativo = true, Celular = "16991388733", Cpf = "41282809322", DataCadastro = new DateTime(2018, 10, 14, 0, 0, 0, 0, DateTimeKind.Unspecified), DataNascimento = new DateTime(1994, 5, 13, 0, 0, 0, 0, DateTimeKind.Unspecified), Email = "cliente01@gmail.com", EnderecoId = 1, Nome = "Cliente 01" },
                        new { Id = 2, Ativo = true, Celular = "16981722833", Cpf = "39902938222", DataCadastro = new DateTime(2018, 10, 14, 0, 0, 0, 0, DateTimeKind.Unspecified), DataNascimento = new DateTime(1989, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified), Email = "cliente02@gmail.com", EnderecoId = 2, Nome = "Cliente 02" }
                    );
                });

            modelBuilder.Entity("ClienteVendas.Domain.Entities.Endereco", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Bairro")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("CEP")
                        .IsRequired()
                        .HasColumnType("varchar(8)")
                        .HasMaxLength(8);

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Complemento")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Logradouro")
                        .IsRequired()
                        .HasColumnType("varchar(150)")
                        .HasMaxLength(150);

                    b.Property<string>("Numero")
                        .IsRequired()
                        .HasColumnType("varchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("Id");

                    b.ToTable("Endereco");

                    b.HasData(
                        new { Id = 1, Bairro = "Centro", CEP = "14801790", Cidade = "Araraquara", Complemento = "Casa", Estado = "SP", Logradouro = "Av. 13 de maio", Numero = "999" },
                        new { Id = 2, Bairro = "Jardim Paulista", CEP = "15900000", Cidade = "Taquaritinga", Complemento = "Casa", Estado = "SP", Logradouro = "Rua 22", Numero = "111" }
                    );
                });

            modelBuilder.Entity("ClienteVendas.Domain.Entities.Produto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataCadastro");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100);

                    b.Property<decimal>("Valor")
                        .HasColumnType("decimal(10,2)");

                    b.HasKey("Id");

                    b.ToTable("Produto");

                    b.HasData(
                        new { Id = 1, DataCadastro = new DateTime(2018, 10, 14, 14, 24, 3, 128, DateTimeKind.Local), Descricao = "Celular Motorola G6", Valor = 1100.00m },
                        new { Id = 2, DataCadastro = new DateTime(2018, 10, 14, 14, 24, 3, 134, DateTimeKind.Local), Descricao = "Celular LG Q6", Valor = 1200.00m },
                        new { Id = 3, DataCadastro = new DateTime(2018, 10, 14, 14, 24, 3, 134, DateTimeKind.Local), Descricao = "Celular Samsung J7", Valor = 1300.00m }
                    );
                });

            modelBuilder.Entity("ClienteVendas.Domain.Entities.Venda", b =>
                {
                    b.Property<int>("Id");

                    b.Property<int>("ClienteId");

                    b.Property<int>("ProdutoId");

                    b.Property<DateTime>("DataVenda")
                        .HasColumnType("datetime");

                    b.Property<int>("Quantidade");

                    b.HasKey("Id", "ClienteId", "ProdutoId");

                    b.HasIndex("ClienteId");

                    b.HasIndex("ProdutoId");

                    b.ToTable("Venda");

                    b.HasData(
                        new { Id = 1, ClienteId = 1, ProdutoId = 1, DataVenda = new DateTime(2018, 9, 2, 0, 0, 0, 0, DateTimeKind.Unspecified), Quantidade = 1 },
                        new { Id = 2, ClienteId = 2, ProdutoId = 1, DataVenda = new DateTime(2018, 9, 3, 0, 0, 0, 0, DateTimeKind.Unspecified), Quantidade = 1 },
                        new { Id = 3, ClienteId = 1, ProdutoId = 2, DataVenda = new DateTime(2018, 9, 15, 0, 0, 0, 0, DateTimeKind.Unspecified), Quantidade = 2 },
                        new { Id = 4, ClienteId = 2, ProdutoId = 3, DataVenda = new DateTime(2018, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified), Quantidade = 1 },
                        new { Id = 5, ClienteId = 1, ProdutoId = 3, DataVenda = new DateTime(2018, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified), Quantidade = 2 }
                    );
                });

            modelBuilder.Entity("ClienteVendas.Domain.Entities.Cliente", b =>
                {
                    b.HasOne("ClienteVendas.Domain.Entities.Endereco", "Endereco")
                        .WithOne("Cliente")
                        .HasForeignKey("ClienteVendas.Domain.Entities.Cliente", "EnderecoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ClienteVendas.Domain.Entities.Venda", b =>
                {
                    b.HasOne("ClienteVendas.Domain.Entities.Cliente", "Cliente")
                        .WithMany("Vendas")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ClienteVendas.Domain.Entities.Produto", "Produto")
                        .WithMany("Vendas")
                        .HasForeignKey("ProdutoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
